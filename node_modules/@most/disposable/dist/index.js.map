{"version":3,"file":"index.js","sources":["../src/disposeNone.js","../src/disposeOnce.js","../src/disposeWith.js","../node_modules/@most/prelude/dist/index.es.js","../src/disposeAll.js","../src/tryDispose.js","../src/index.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport const disposeNone = () => NONE\nconst NONE = new (class DisposeNone {\n  dispose () {}\n})()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\n// Wrap an existing disposable (which may not already have been once()d)\n// so that it will only dispose its underlying resource at most once.\nexport const disposeOnce = disposable =>\n  new DisposeOnce(disposable)\n\nexport class DisposeOnce {\n  constructor (disposable) {\n    this.disposed = false\n    this.disposable = disposable\n  }\n\n  dispose () {\n    if (!this.disposed) {\n      this.disposed = true\n      this.disposable.dispose()\n      this.disposable = undefined\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { disposeOnce } from './disposeOnce'\n\n// Create a Disposable that will use the provided\n// dispose function to dispose the resource\nexport const disposeWith = (dispose, resource) =>\n  disposeOnce(new Disposable(dispose, resource))\n\n// Disposable represents a resource that must be\n// disposed/released. It aggregates a function to dispose\n// the resource and a handle to a key/id/handle/reference\n// that identifies the resource\nexport class Disposable {\n  constructor (dispose, resource) {\n    this._dispose = dispose\n    this._resource = resource\n  }\n\n  dispose () {\n    this._dispose(this._resource)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n// Non-mutating array operations\n\n// cons :: a -> [a] -> [a]\n// a with x prepended\nfunction cons (x, a) {\n  var l = a.length;\n  var b = new Array(l + 1);\n  b[0] = x;\n  for (var i = 0; i < l; ++i) {\n    b[i + 1] = a[i];\n  }\n  return b\n}\n\n// append :: a -> [a] -> [a]\n// a with x appended\nfunction append (x, a) {\n  var l = a.length;\n  var b = new Array(l + 1);\n  for (var i = 0; i < l; ++i) {\n    b[i] = a[i];\n  }\n\n  b[l] = x;\n  return b\n}\n\n// drop :: Int -> [a] -> [a]\n// drop first n elements\nfunction drop (n, a) { // eslint-disable-line complexity\n  if (n < 0) {\n    throw new TypeError('n must be >= 0')\n  }\n\n  var l = a.length;\n  if (n === 0 || l === 0) {\n    return a\n  }\n\n  if (n >= l) {\n    return []\n  }\n\n  return unsafeDrop(n, a, l - n)\n}\n\n// unsafeDrop :: Int -> [a] -> Int -> [a]\n// Internal helper for drop\nfunction unsafeDrop (n, a, l) {\n  var b = new Array(l);\n  for (var i = 0; i < l; ++i) {\n    b[i] = a[n + i];\n  }\n  return b\n}\n\n// tail :: [a] -> [a]\n// drop head element\nfunction tail (a) {\n  return drop(1, a)\n}\n\n// copy :: [a] -> [a]\n// duplicate a (shallow duplication)\nfunction copy (a) {\n  var l = a.length;\n  var b = new Array(l);\n  for (var i = 0; i < l; ++i) {\n    b[i] = a[i];\n  }\n  return b\n}\n\n// map :: (a -> b) -> [a] -> [b]\n// transform each element with f\nfunction map (f, a) {\n  var l = a.length;\n  var b = new Array(l);\n  for (var i = 0; i < l; ++i) {\n    b[i] = f(a[i]);\n  }\n  return b\n}\n\n// reduce :: (a -> b -> a) -> a -> [b] -> a\n// accumulate via left-fold\nfunction reduce (f, z, a) {\n  var r = z;\n  for (var i = 0, l = a.length; i < l; ++i) {\n    r = f(r, a[i], i);\n  }\n  return r\n}\n\n// replace :: a -> Int -> [a]\n// replace element at index\nfunction replace (x, i, a) { // eslint-disable-line complexity\n  if (i < 0) {\n    throw new TypeError('i must be >= 0')\n  }\n\n  var l = a.length;\n  var b = new Array(l);\n  for (var j = 0; j < l; ++j) {\n    b[j] = i === j ? x : a[j];\n  }\n  return b\n}\n\n// remove :: Int -> [a] -> [a]\n// remove element at index\nfunction remove (i, a) {  // eslint-disable-line complexity\n  if (i < 0) {\n    throw new TypeError('i must be >= 0')\n  }\n\n  var l = a.length;\n  if (l === 0 || i >= l) { // exit early if index beyond end of array\n    return a\n  }\n\n  if (l === 1) { // exit early if index in bounds and length === 1\n    return []\n  }\n\n  return unsafeRemove(i, a, l - 1)\n}\n\n// unsafeRemove :: Int -> [a] -> Int -> [a]\n// Internal helper to remove element at index\nfunction unsafeRemove (i, a, l) {\n  var b = new Array(l);\n  var j;\n  for (j = 0; j < i; ++j) {\n    b[j] = a[j];\n  }\n  for (j = i; j < l; ++j) {\n    b[j] = a[j + 1];\n  }\n\n  return b\n}\n\n// removeAll :: (a -> boolean) -> [a] -> [a]\n// remove all elements matching a predicate\nfunction removeAll (f, a) {\n  var l = a.length;\n  var b = new Array(l);\n  var j = 0;\n  for (var x = (void 0), i = 0; i < l; ++i) {\n    x = a[i];\n    if (!f(x)) {\n      b[j] = x;\n      ++j;\n    }\n  }\n\n  b.length = j;\n  return b\n}\n\n// findIndex :: a -> [a] -> Int\n// find index of x in a, from the left\nfunction findIndex (x, a) {\n  for (var i = 0, l = a.length; i < l; ++i) {\n    if (x === a[i]) {\n      return i\n    }\n  }\n  return -1\n}\n\n// isArrayLike :: * -> boolean\n// Return true iff x is array-like\nfunction isArrayLike (x) {\n  return x != null && typeof x.length === 'number' && typeof x !== 'function'\n}\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n// id :: a -> a\nvar id = function (x) { return x; };\n\n// compose :: (b -> c) -> (a -> b) -> (a -> c)\nvar compose = function (f, g) { return function (x) { return f(g(x)); }; };\n\n// apply :: (a -> b) -> a -> b\nvar apply = function (f, x) { return f(x); };\n\n// curry2 :: ((a, b) -> c) -> (a -> b -> c)\nfunction curry2 (f) {\n  function curried (a, b) {\n    switch (arguments.length) {\n      case 0: return curried\n      case 1: return function (b) { return f(a, b); }\n      default: return f(a, b)\n    }\n  }\n  return curried\n}\n\n// curry3 :: ((a, b, c) -> d) -> (a -> b -> c -> d)\nfunction curry3 (f) {\n  function curried (a, b, c) { // eslint-disable-line complexity\n    switch (arguments.length) {\n      case 0: return curried\n      case 1: return curry2(function (b, c) { return f(a, b, c); })\n      case 2: return function (c) { return f(a, b, c); }\n      default:return f(a, b, c)\n    }\n  }\n  return curried\n}\n\n// curry4 :: ((a, b, c, d) -> e) -> (a -> b -> c -> d -> e)\nfunction curry4 (f) {\n  function curried (a, b, c, d) { // eslint-disable-line complexity\n    switch (arguments.length) {\n      case 0: return curried\n      case 1: return curry3(function (b, c, d) { return f(a, b, c, d); })\n      case 2: return curry2(function (c, d) { return f(a, b, c, d); })\n      case 3: return function (d) { return f(a, b, c, d); }\n      default:return f(a, b, c, d)\n    }\n  }\n  return curried\n}\n\n/** @license MIT License (c) copyright 2016 original author or authors */\n\nexport { cons, append, drop, tail, copy, map, reduce, replace, remove, removeAll, findIndex, isArrayLike, id, compose, apply, curry2, curry3, curry4 };\n//# sourceMappingURL=index.es.js.map\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { reduce } from '@most/prelude'\n\n// Aggregate a list of disposables into a DisposeAll\nexport const disposeAll = ds =>\n  new DisposeAll(ds)\n\n// Convenience to aggregate 2 disposables\nexport const disposeBoth = (d1, d2) =>\n  disposeAll([d1, d2])\n\nexport class DisposeAll {\n  constructor (disposables) {\n    this.disposables = disposables\n  }\n\n  dispose () {\n    throwIfErrors(disposeCollectErrors(this.disposables))\n  }\n}\n\n// Dispose all, safely collecting errors into an array\nconst disposeCollectErrors = disposables =>\n  reduce(appendIfError, [], disposables)\n\n// Call dispose and if throws, append thrown error to errors\nconst appendIfError = (errors, d) => {\n  try {\n    d.dispose()\n  } catch (e) {\n    errors.push(e)\n  }\n  return errors\n}\n\n// Throw DisposeAllError if errors is non-empty\nconst throwIfErrors = errors => {\n  if (errors.length > 0) {\n    throw new DisposeAllError(`${errors.length} errors`, errors)\n  }\n}\n\n// Aggregate Error type for DisposeAll\nexport class DisposeAllError extends Error {\n  constructor (message, errors) {\n    super(message)\n    this.message = message\n    this.name = this.constructor.name\n    this.errors = errors\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n\n    this.stack = `${this.stack}${formatErrorStacks(this.errors)}`\n  }\n\n  toString () {\n    return this.stack\n  }\n}\n\nconst formatErrorStacks = errors =>\n  reduce(formatErrorStack, '', errors)\n\nconst formatErrorStack = (s, e, i) =>\n  s + `\\n[${(i + 1)}] ${e.stack}`\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\n// Try to dispose the disposable.  If it throws, send\n// the error to sink.error with the provided Time value\nexport function tryDispose (t, disposable, sink) {\n  try {\n    disposable.dispose()\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport { disposeNone } from './disposeNone'\nexport { disposeWith } from './disposeWith'\nexport { disposeOnce } from './disposeOnce'\nexport { disposeAll, disposeBoth } from './disposeAll'\nexport { tryDispose } from './tryDispose'\n"],"names":["const","super"],"mappings":"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"}